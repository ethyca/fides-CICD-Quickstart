name: CI

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  
  # Order of operations:
  # 1. Build my database and simulate running a migration on it with _potentially_ new fields
  # 2. Run a database scan and identify any undocumented changes that occured using the fides scan command√ü
  # 3. Run a check against the datasets and validate it does not violate policy.yml
  
  # This is an example of running a test using a just-in-time built fides server. In production,
  # You may want to point this to a remote server such as fides cloud or your own cluster. 
  # See the following link for creating a service account and adding credentials in the CLI flows; 
  # {LinkToGuidePlaceholder}

  # This job simulates building a net-new database and running a migrations script against it 
  # Fides will check this database and compare it to your .fides file. T
  database_migration_simulation:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sample_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: python -m pip install psycopg2-binary
      - name: Run database migrations
        run: |
          python -c "
          import os
          import psycopg2
          from psycopg2 import sql

          DB_HOST = 'localhost'
          DB_PORT = 5432
          DB_USER = 'postgres'
          DB_PASSWORD = 'postgres'
          DB_NAME = 'sample_db'

          conn = psycopg2.connect(
              dbname=DB_NAME,
              user=DB_USER,
              password=DB_PASSWORD,
              host=DB_HOST,
              port=DB_PORT
          )

          with open('database/migrations/postgres_sample.sql', 'r') as f:
              sql_script = f.read()

          with conn.cursor() as cursor:
              cursor.execute(sql_script)
              conn.commit()

          conn.close()
          "

  fides_checks:
    needs: database_migration_simulation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Update pip
      run: python -m pip install -U pip
    - name: Install dependencies
      run: python -m pip install ethyca-fides
    - name: Scan Database and validate that all fields are accounted for
      run: fides scan dataset db postgres://postgres:postgres@localhost:5432/public
    - name: Evaluation
      run: fides evaluate .fides/
